(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./src/stylesheets/wizard-steps.scss
var wizard_steps = __webpack_require__(0);

// CONCATENATED MODULE: ./src/javascripts/wizard-steps.js
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var WizardSteps =
/*#__PURE__*/
function () {
  /**
   * The constructor
   * 
   * @param {{ element: string, events: { onBeforeProceed: ((currentStepIndex: number) => true) | ((currentStepIndex: number) => false), onAfterProceed: (currentStepIndex: number), onBeforeBack: ((currentStepIndex: number) => true) | ((currentStepIndex: number) => false), onAfterBack: (currentStepIndex: number) } }} options
   *
   * @property {string} options.element The selector for the wizard element
   * @property {string} options.events.onBeforeProceed The callback called before going to next step. To continue must return true if success, false if not
   * @property {string} options.events.onAfterProceed The callback called after going to next step.
   * @property {string} options.events.onBeforeBack The callback called before going to previous step. To continue must return true if success, false if not
   * @property {string} options.events.onAfterBack The callback called after going to previous step.
   */
  function WizardSteps() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, WizardSteps);

    this._options = Object.assign({
      element: '.wizard-steps',
      events: {
        onBeforeProceed: function onBeforeProceed(currentStepIndex) {
          return true;
        },
        onAfterProceed: function onAfterProceed(currentStepIndex) {},
        onBeforeBack: function onBeforeBack(currentStepIndex) {
          return true;
        },
        onAfterBack: function onAfterBack(currentStepIndex) {}
      }
    }, options);
    this._wizardStepContainer = document.querySelector(this._options.element);

    if (this._wizardStepContainer == undefined) {
      console.error("Can't find the specified element");
    } else {
      this._wizardStepsHeaderTabs = this._wizardStepContainer.querySelectorAll('.wizard-steps-header .wizard-step-header-tab');
      this._wizardSteps = this._wizardStepContainer.querySelectorAll('.wizard-step');
      this._stepActive = this._wizardStepContainer.querySelector('.wizard-step.active');
      this._buttonBack = document.querySelector('.btn-back');
      this._buttonNext = document.querySelector('.btn-next');
      this._currentStepIndex = [].indexOf.call(this._wizardSteps, this._stepActive);

      this._registerEvents();
    }
  }
  /**
   * Setter to update options.events.onBeforeProceed
   * 
   * @param {(() => true) | (() => false)} callback - The callback. Must return true or false.
   */


  _createClass(WizardSteps, [{
    key: "goToNextStep",
    value: function goToNextStep() {
      if (this._currentStepIndex < this._wizardSteps.length - 1) {
        this._toggleStep(this._currentStepIndex);

        this._toggleStep(this._currentStepIndex + 1);

        this._currentStepIndex += 1;
      }
    }
  }, {
    key: "goToPreviousStep",
    value: function goToPreviousStep() {
      if (this._currentStepIndex > 0) {
        this._toggleStep(this._currentStepIndex);

        this._toggleStep(this._currentStepIndex - 1);

        this._currentStepIndex -= 1;
      }
    }
  }, {
    key: "goToStep",
    value: function goToStep(index) {
      this._toggleStep(this._currentStepIndex);

      this._toggleStep(index);
    }
  }, {
    key: "_toggleStep",
    value: function _toggleStep(index) {
      // Header is not required
      if (this._wizardStepsHeaderTabs.length > 0) this._wizardStepsHeaderTabs[index].classList.toggle('active');

      this._wizardSteps[index].classList.toggle('active');
    }
  }, {
    key: "_registerEvents",
    value: function _registerEvents() {
      var _this = this;

      if (this._buttonBack != undefined) {
        this._buttonBack.addEventListener('click', function (e) {
          e.preventDefault();

          var callbackResponse = _this._options.events.onBeforeBack(_this._currentStepIndex);

          if (callbackResponse == true) {
            _this.goToPreviousStep();

            _this._options.events.onAfterBack(_this._currentStepIndex);
          }
        }, false);
      }

      if (this._buttonNext != undefined) {
        this._buttonNext.addEventListener('click', function (e) {
          e.preventDefault();

          var callbackResponse = _this._options.events.onBeforeProceed(_this._currentStepIndex);

          if (callbackResponse) {
            _this.goToNextStep();

            _this._options.events.onAfterProceed(_this._currentStepIndex);
          }
        }, false);
      }
    }
  }, {
    key: "onBeforeProceed",
    set: function set(callback) {
      this._options.events.onBeforeProceed = callback;
    }
    /**
     * Setter to update options.events.onAfterProceed
     * 
     * @param {(() => true) | (() => false)} callback - The callback.
     */

  }, {
    key: "onAfterProceed",
    set: function set(callback) {
      this._options.events.onAfterProceed = callback;
    }
    /**
     * Setter to update options.events.onBeforeBack
     * 
     * @param {(() => true) | (() => false)} callback - The callback. Must return true or false.
     */

  }, {
    key: "onBeforeBack",
    set: function set(callback) {
      this._options.events.onBeforeBack = callback;
    }
    /**
     * Setter to update options.events.onAfterBack
     * 
     * @param {(() => true) | (() => false)} callback - The callback.
     */

  }, {
    key: "onAfterBack",
    set: function set(callback) {
      this._options.events.onAfterBack = callback;
    }
  }]);

  return WizardSteps;
}();


// CONCATENATED MODULE: ./src/index.js
/* concated harmony reexport WizardSteps */__webpack_require__.d(__webpack_exports__, "WizardSteps", function() { return WizardSteps; });



/***/ })
/******/ ]);
});